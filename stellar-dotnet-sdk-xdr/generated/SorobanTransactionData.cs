// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace stellar_dotnet_sdk.xdr;

// === xdr source ============================================================

//  struct SorobanTransactionData
//  {
//      ExtensionPoint ext;
//      SorobanResources resources;
//      // Amount of the transaction `fee` allocated to the Soroban resource fees.
//      // The fraction of `resourceFee` corresponding to `resources` specified 
//      // above is *not* refundable (i.e. fees for instructions, ledger I/O), as
//      // well as fees for the transaction size.
//      // The remaining part of the fee is refundable and the charged value is
//      // based on the actual consumption of refundable resources (events, ledger
//      // rent bumps).
//      // The `inclusionFee` used for prioritization of the transaction is defined
//      // as `tx.fee - resourceFee`.
//      int64 resourceFee;
//  };

//  ===========================================================================
public class SorobanTransactionData
{
    public ExtensionPoint Ext { get; set; }
    public SorobanResources Resources { get; set; }
    public Int64 ResourceFee { get; set; }

    public static void Encode(XdrDataOutputStream stream, SorobanTransactionData encodedSorobanTransactionData)
    {
        ExtensionPoint.Encode(stream, encodedSorobanTransactionData.Ext);
        SorobanResources.Encode(stream, encodedSorobanTransactionData.Resources);
        Int64.Encode(stream, encodedSorobanTransactionData.ResourceFee);
    }

    public static SorobanTransactionData Decode(XdrDataInputStream stream)
    {
        var decodedSorobanTransactionData = new SorobanTransactionData();
        decodedSorobanTransactionData.Ext = ExtensionPoint.Decode(stream);
        decodedSorobanTransactionData.Resources = SorobanResources.Decode(stream);
        decodedSorobanTransactionData.ResourceFee = Int64.Decode(stream);
        return decodedSorobanTransactionData;
    }
}