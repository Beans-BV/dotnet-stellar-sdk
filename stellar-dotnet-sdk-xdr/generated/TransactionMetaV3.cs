// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace stellar_dotnet_sdk.xdr;

// === xdr source ============================================================

//  struct TransactionMetaV3
//  {
//      ExtensionPoint ext;
//  
//      LedgerEntryChanges txChangesBefore;  // tx level changes before operations
//                                           // are applied if any
//      OperationMeta operations<>;          // meta for each operation
//      LedgerEntryChanges txChangesAfter;   // tx level changes after operations are
//                                           // applied if any
//      SorobanTransactionMeta* sorobanMeta; // Soroban-specific meta (only for 
//                                           // Soroban transactions).
//  };

//  ===========================================================================
public class TransactionMetaV3
{
    public ExtensionPoint Ext { get; set; }
    public LedgerEntryChanges TxChangesBefore { get; set; }
    public OperationMeta[] Operations { get; set; }
    public LedgerEntryChanges TxChangesAfter { get; set; }
    public SorobanTransactionMeta SorobanMeta { get; set; }

    public static void Encode(XdrDataOutputStream stream, TransactionMetaV3 encodedTransactionMetaV3)
    {
        ExtensionPoint.Encode(stream, encodedTransactionMetaV3.Ext);
        LedgerEntryChanges.Encode(stream, encodedTransactionMetaV3.TxChangesBefore);
        var operationssize = encodedTransactionMetaV3.Operations.Length;
        stream.WriteInt(operationssize);
        for (var i = 0; i < operationssize; i++) OperationMeta.Encode(stream, encodedTransactionMetaV3.Operations[i]);
        LedgerEntryChanges.Encode(stream, encodedTransactionMetaV3.TxChangesAfter);
        if (encodedTransactionMetaV3.SorobanMeta != null)
        {
            stream.WriteInt(1);
            SorobanTransactionMeta.Encode(stream, encodedTransactionMetaV3.SorobanMeta);
        }
        else
        {
            stream.WriteInt(0);
        }
    }

    public static TransactionMetaV3 Decode(XdrDataInputStream stream)
    {
        var decodedTransactionMetaV3 = new TransactionMetaV3();
        decodedTransactionMetaV3.Ext = ExtensionPoint.Decode(stream);
        decodedTransactionMetaV3.TxChangesBefore = LedgerEntryChanges.Decode(stream);
        var operationssize = stream.ReadInt();
        decodedTransactionMetaV3.Operations = new OperationMeta[operationssize];
        for (var i = 0; i < operationssize; i++) decodedTransactionMetaV3.Operations[i] = OperationMeta.Decode(stream);
        decodedTransactionMetaV3.TxChangesAfter = LedgerEntryChanges.Decode(stream);
        var SorobanMetaPresent = stream.ReadInt();
        if (SorobanMetaPresent != 0) decodedTransactionMetaV3.SorobanMeta = SorobanTransactionMeta.Decode(stream);
        return decodedTransactionMetaV3;
    }
}