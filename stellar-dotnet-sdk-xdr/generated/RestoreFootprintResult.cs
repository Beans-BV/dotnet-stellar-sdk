// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace stellar_dotnet_sdk.xdr;

// === xdr source ============================================================

//  union RestoreFootprintResult switch (RestoreFootprintResultCode code)
//  {
//  case RESTORE_FOOTPRINT_SUCCESS:
//      void;
//  case RESTORE_FOOTPRINT_MALFORMED:
//  case RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED:
//  case RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE:
//      void;
//  };

//  ===========================================================================
public class RestoreFootprintResult
{
    public RestoreFootprintResultCode Discriminant { get; set; } = new();

    public static void Encode(XdrDataOutputStream stream, RestoreFootprintResult encodedRestoreFootprintResult)
    {
        stream.WriteInt((int)encodedRestoreFootprintResult.Discriminant.InnerValue);
        switch (encodedRestoreFootprintResult.Discriminant.InnerValue)
        {
            case RestoreFootprintResultCode.RestoreFootprintResultCodeEnum.RESTORE_FOOTPRINT_SUCCESS:
                break;
            case RestoreFootprintResultCode.RestoreFootprintResultCodeEnum.RESTORE_FOOTPRINT_MALFORMED:
            case RestoreFootprintResultCode.RestoreFootprintResultCodeEnum.RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED:
            case RestoreFootprintResultCode.RestoreFootprintResultCodeEnum
                .RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE:
                break;
        }
    }

    public static RestoreFootprintResult Decode(XdrDataInputStream stream)
    {
        var decodedRestoreFootprintResult = new RestoreFootprintResult();
        var discriminant = RestoreFootprintResultCode.Decode(stream);
        decodedRestoreFootprintResult.Discriminant = discriminant;
        switch (decodedRestoreFootprintResult.Discriminant.InnerValue)
        {
            case RestoreFootprintResultCode.RestoreFootprintResultCodeEnum.RESTORE_FOOTPRINT_SUCCESS:
                break;
            case RestoreFootprintResultCode.RestoreFootprintResultCodeEnum.RESTORE_FOOTPRINT_MALFORMED:
            case RestoreFootprintResultCode.RestoreFootprintResultCodeEnum.RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED:
            case RestoreFootprintResultCode.RestoreFootprintResultCodeEnum
                .RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE:
                break;
        }

        return decodedRestoreFootprintResult;
    }
}