// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

using System;

namespace stellar_dotnet_sdk.xdr;

// === xdr source ============================================================

//  enum SCErrorCode
//  {
//      SCEC_ARITH_DOMAIN = 0,      // Some arithmetic was undefined (overflow, divide-by-zero).
//      SCEC_INDEX_BOUNDS = 1,      // Something was indexed beyond its bounds.
//      SCEC_INVALID_INPUT = 2,     // User provided some otherwise-bad data.
//      SCEC_MISSING_VALUE = 3,     // Some value was required but not provided.
//      SCEC_EXISTING_VALUE = 4,    // Some value was provided where not allowed.
//      SCEC_EXCEEDED_LIMIT = 5,    // Some arbitrary limit -- gas or otherwise -- was hit.
//      SCEC_INVALID_ACTION = 6,    // Data was valid but action requested was not.
//      SCEC_INTERNAL_ERROR = 7,    // The host detected an error in its own logic.
//      SCEC_UNEXPECTED_TYPE = 8,   // Some type wasn't as expected.
//      SCEC_UNEXPECTED_SIZE = 9    // Something's size wasn't as expected.
//  };

//  ===========================================================================
public class SCErrorCode
{
    public enum SCErrorCodeEnum
    {
        SCEC_ARITH_DOMAIN = 0,
        SCEC_INDEX_BOUNDS = 1,
        SCEC_INVALID_INPUT = 2,
        SCEC_MISSING_VALUE = 3,
        SCEC_EXISTING_VALUE = 4,
        SCEC_EXCEEDED_LIMIT = 5,
        SCEC_INVALID_ACTION = 6,
        SCEC_INTERNAL_ERROR = 7,
        SCEC_UNEXPECTED_TYPE = 8,
        SCEC_UNEXPECTED_SIZE = 9
    }

    public SCErrorCodeEnum InnerValue { get; set; } = default;

    public static SCErrorCode Create(SCErrorCodeEnum v)
    {
        return new SCErrorCode
        {
            InnerValue = v
        };
    }

    public static SCErrorCode Decode(XdrDataInputStream stream)
    {
        var value = stream.ReadInt();
        switch (value)
        {
            case 0: return Create(SCErrorCodeEnum.SCEC_ARITH_DOMAIN);
            case 1: return Create(SCErrorCodeEnum.SCEC_INDEX_BOUNDS);
            case 2: return Create(SCErrorCodeEnum.SCEC_INVALID_INPUT);
            case 3: return Create(SCErrorCodeEnum.SCEC_MISSING_VALUE);
            case 4: return Create(SCErrorCodeEnum.SCEC_EXISTING_VALUE);
            case 5: return Create(SCErrorCodeEnum.SCEC_EXCEEDED_LIMIT);
            case 6: return Create(SCErrorCodeEnum.SCEC_INVALID_ACTION);
            case 7: return Create(SCErrorCodeEnum.SCEC_INTERNAL_ERROR);
            case 8: return Create(SCErrorCodeEnum.SCEC_UNEXPECTED_TYPE);
            case 9: return Create(SCErrorCodeEnum.SCEC_UNEXPECTED_SIZE);
            default:
                throw new Exception("Unknown enum value: " + value);
        }
    }

    public static void Encode(XdrDataOutputStream stream, SCErrorCode value)
    {
        stream.WriteInt((int)value.InnerValue);
    }
}