// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace stellar_dotnet_sdk.xdr;

// === xdr source ============================================================

//  union ContractIDPreimage switch (ContractIDPreimageType type)
//  {
//  case CONTRACT_ID_PREIMAGE_FROM_ADDRESS:
//      struct
//      {
//          SCAddress address;
//          uint256 salt;
//      } fromAddress;
//  case CONTRACT_ID_PREIMAGE_FROM_ASSET:
//      Asset fromAsset;
//  };

//  ===========================================================================
public class ContractIDPreimage
{
    public ContractIDPreimageType Discriminant { get; set; } = new();

    public ContractIDPreimageFromAddress FromAddress { get; set; }
    public Asset FromAsset { get; set; }

    public static void Encode(XdrDataOutputStream stream, ContractIDPreimage encodedContractIDPreimage)
    {
        stream.WriteInt((int)encodedContractIDPreimage.Discriminant.InnerValue);
        switch (encodedContractIDPreimage.Discriminant.InnerValue)
        {
            case ContractIDPreimageType.ContractIDPreimageTypeEnum.CONTRACT_ID_PREIMAGE_FROM_ADDRESS:
                ContractIDPreimageFromAddress.Encode(stream, encodedContractIDPreimage.FromAddress);
                break;
            case ContractIDPreimageType.ContractIDPreimageTypeEnum.CONTRACT_ID_PREIMAGE_FROM_ASSET:
                Asset.Encode(stream, encodedContractIDPreimage.FromAsset);
                break;
        }
    }

    public static ContractIDPreimage Decode(XdrDataInputStream stream)
    {
        var decodedContractIDPreimage = new ContractIDPreimage();
        var discriminant = ContractIDPreimageType.Decode(stream);
        decodedContractIDPreimage.Discriminant = discriminant;
        switch (decodedContractIDPreimage.Discriminant.InnerValue)
        {
            case ContractIDPreimageType.ContractIDPreimageTypeEnum.CONTRACT_ID_PREIMAGE_FROM_ADDRESS:
                decodedContractIDPreimage.FromAddress = ContractIDPreimageFromAddress.Decode(stream);
                break;
            case ContractIDPreimageType.ContractIDPreimageTypeEnum.CONTRACT_ID_PREIMAGE_FROM_ASSET:
                decodedContractIDPreimage.FromAsset = Asset.Decode(stream);
                break;
        }

        return decodedContractIDPreimage;
    }

    public class ContractIDPreimageFromAddress
    {
        public SCAddress Address { get; set; }
        public Uint256 Salt { get; set; }

        public static void Encode(XdrDataOutputStream stream,
            ContractIDPreimageFromAddress encodedContractIDPreimageFromAddress)
        {
            SCAddress.Encode(stream, encodedContractIDPreimageFromAddress.Address);
            Uint256.Encode(stream, encodedContractIDPreimageFromAddress.Salt);
        }

        public static ContractIDPreimageFromAddress Decode(XdrDataInputStream stream)
        {
            var decodedContractIDPreimageFromAddress = new ContractIDPreimageFromAddress();
            decodedContractIDPreimageFromAddress.Address = SCAddress.Decode(stream);
            decodedContractIDPreimageFromAddress.Salt = Uint256.Decode(stream);
            return decodedContractIDPreimageFromAddress;
        }
    }
}