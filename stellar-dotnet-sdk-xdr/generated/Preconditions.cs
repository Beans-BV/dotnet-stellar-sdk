// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr {

// === xdr source ============================================================

//  union Preconditions switch (PreconditionType type)
//  {
//  case PRECOND_NONE:
//      void;
//  case PRECOND_TIME:
//      TimeBounds timeBounds;
//  case PRECOND_V2:
//      PreconditionsV2 v2;
//  };

//  ===========================================================================
public class Preconditions  {
  public Preconditions () {}

  public PreconditionType Discriminant { get; set; } = new PreconditionType();

  public TimeBounds TimeBounds {get; set;}
  public PreconditionsV2 V2 {get; set;}
  public static void Encode(XdrDataOutputStream stream, Preconditions encodedPreconditions) {
  stream.WriteInt((int)encodedPreconditions.Discriminant.InnerValue);
  switch (encodedPreconditions.Discriminant.InnerValue) {
  case PreconditionType.PreconditionTypeEnum.PRECOND_NONE:
  break;
  case PreconditionType.PreconditionTypeEnum.PRECOND_TIME:
  TimeBounds.Encode(stream, encodedPreconditions.TimeBounds);
  break;
  case PreconditionType.PreconditionTypeEnum.PRECOND_V2:
  PreconditionsV2.Encode(stream, encodedPreconditions.V2);
  break;
  }
  }
  public static Preconditions Decode(XdrDataInputStream stream) {
  Preconditions decodedPreconditions = new Preconditions();
  PreconditionType discriminant = PreconditionType.Decode(stream);
  decodedPreconditions.Discriminant = discriminant;
  switch (decodedPreconditions.Discriminant.InnerValue) {
  case PreconditionType.PreconditionTypeEnum.PRECOND_NONE:
  break;
  case PreconditionType.PreconditionTypeEnum.PRECOND_TIME:
  decodedPreconditions.TimeBounds = TimeBounds.Decode(stream);
  break;
  case PreconditionType.PreconditionTypeEnum.PRECOND_V2:
  decodedPreconditions.V2 = PreconditionsV2.Decode(stream);
  break;
  }
    return decodedPreconditions;
  }
}
}
