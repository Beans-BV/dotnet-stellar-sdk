// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct CreateContractArgsV2
//  {
//      ContractIDPreimage contractIDPreimage;
//      ContractExecutable executable;
//      // Arguments of the contract's constructor.
//      SCVal constructorArgs<>;
//  };

//  ===========================================================================
public class CreateContractArgsV2
{
    public ContractIDPreimage ContractIDPreimage { get; set; }
    public ContractExecutable Executable { get; set; }
    public SCVal[] ConstructorArgs { get; set; }

    public static void Encode(XdrDataOutputStream stream, CreateContractArgsV2 encodedCreateContractArgsV2)
    {
        ContractIDPreimage.Encode(stream, encodedCreateContractArgsV2.ContractIDPreimage);
        ContractExecutable.Encode(stream, encodedCreateContractArgsV2.Executable);
        var constructorArgssize = encodedCreateContractArgsV2.ConstructorArgs.Length;
        stream.WriteInt(constructorArgssize);
        for (var i = 0; i < constructorArgssize; i++)
        {
            SCVal.Encode(stream, encodedCreateContractArgsV2.ConstructorArgs[i]);
        }
    }

    public static CreateContractArgsV2 Decode(XdrDataInputStream stream)
    {
        var decodedCreateContractArgsV2 = new CreateContractArgsV2();
        decodedCreateContractArgsV2.ContractIDPreimage = ContractIDPreimage.Decode(stream);
        decodedCreateContractArgsV2.Executable = ContractExecutable.Decode(stream);
        var constructorArgssize = stream.ReadInt();
        decodedCreateContractArgsV2.ConstructorArgs = new SCVal[constructorArgssize];
        for (var i = 0; i < constructorArgssize; i++)
        {
            decodedCreateContractArgsV2.ConstructorArgs[i] = SCVal.Decode(stream);
        }
        return decodedCreateContractArgsV2;
    }
}