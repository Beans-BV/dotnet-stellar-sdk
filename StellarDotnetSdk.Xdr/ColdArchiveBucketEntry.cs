// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  union ColdArchiveBucketEntry switch (ColdArchiveBucketEntryType type)
//  {
//  case COLD_ARCHIVE_METAENTRY:
//      BucketMetadata metaEntry;
//  case COLD_ARCHIVE_ARCHIVED_LEAF:
//      ColdArchiveArchivedLeaf archivedLeaf;
//  case COLD_ARCHIVE_DELETED_LEAF:
//      ColdArchiveDeletedLeaf deletedLeaf;
//  case COLD_ARCHIVE_BOUNDARY_LEAF:
//      ColdArchiveBoundaryLeaf boundaryLeaf;
//  case COLD_ARCHIVE_HASH:
//      ColdArchiveHashEntry hashEntry;
//  };

//  ===========================================================================
public class ColdArchiveBucketEntry
{
    public ColdArchiveBucketEntryType Discriminant { get; set; } = new();

    public BucketMetadata MetaEntry { get; set; }
    public ColdArchiveArchivedLeaf ArchivedLeaf { get; set; }
    public ColdArchiveDeletedLeaf DeletedLeaf { get; set; }
    public ColdArchiveBoundaryLeaf BoundaryLeaf { get; set; }
    public ColdArchiveHashEntry HashEntry { get; set; }

    public static void Encode(XdrDataOutputStream stream, ColdArchiveBucketEntry encodedColdArchiveBucketEntry)
    {
        stream.WriteInt((int)encodedColdArchiveBucketEntry.Discriminant.InnerValue);
        switch (encodedColdArchiveBucketEntry.Discriminant.InnerValue)
        {
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_METAENTRY:
                BucketMetadata.Encode(stream, encodedColdArchiveBucketEntry.MetaEntry);
                break;
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_ARCHIVED_LEAF:
                ColdArchiveArchivedLeaf.Encode(stream, encodedColdArchiveBucketEntry.ArchivedLeaf);
                break;
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_DELETED_LEAF:
                ColdArchiveDeletedLeaf.Encode(stream, encodedColdArchiveBucketEntry.DeletedLeaf);
                break;
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_BOUNDARY_LEAF:
                ColdArchiveBoundaryLeaf.Encode(stream, encodedColdArchiveBucketEntry.BoundaryLeaf);
                break;
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_HASH:
                ColdArchiveHashEntry.Encode(stream, encodedColdArchiveBucketEntry.HashEntry);
                break;
        }
    }

    public static ColdArchiveBucketEntry Decode(XdrDataInputStream stream)
    {
        var decodedColdArchiveBucketEntry = new ColdArchiveBucketEntry();
        var discriminant = ColdArchiveBucketEntryType.Decode(stream);
        decodedColdArchiveBucketEntry.Discriminant = discriminant;
        switch (decodedColdArchiveBucketEntry.Discriminant.InnerValue)
        {
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_METAENTRY:
                decodedColdArchiveBucketEntry.MetaEntry = BucketMetadata.Decode(stream);
                break;
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_ARCHIVED_LEAF:
                decodedColdArchiveBucketEntry.ArchivedLeaf = ColdArchiveArchivedLeaf.Decode(stream);
                break;
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_DELETED_LEAF:
                decodedColdArchiveBucketEntry.DeletedLeaf = ColdArchiveDeletedLeaf.Decode(stream);
                break;
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_BOUNDARY_LEAF:
                decodedColdArchiveBucketEntry.BoundaryLeaf = ColdArchiveBoundaryLeaf.Decode(stream);
                break;
            case ColdArchiveBucketEntryType.ColdArchiveBucketEntryTypeEnum.COLD_ARCHIVE_HASH:
                decodedColdArchiveBucketEntry.HashEntry = ColdArchiveHashEntry.Decode(stream);
                break;
        }
        return decodedColdArchiveBucketEntry;
    }
}