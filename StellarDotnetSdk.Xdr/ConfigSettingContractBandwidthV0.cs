// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct ConfigSettingContractBandwidthV0
//  {
//      // Maximum sum of all transaction sizes in the ledger in bytes
//      uint32 ledgerMaxTxsSizeBytes;
//      // Maximum size in bytes for a transaction
//      uint32 txMaxSizeBytes;
//  
//      // Fee for 1 KB of transaction size
//      int64 feeTxSize1KB;
//  };

//  ===========================================================================
public class ConfigSettingContractBandwidthV0
{
    public Uint32 LedgerMaxTxsSizeBytes { get; set; }
    public Uint32 TxMaxSizeBytes { get; set; }
    public Int64 FeeTxSize1KB { get; set; }

    public static void Encode(XdrDataOutputStream stream,
        ConfigSettingContractBandwidthV0 encodedConfigSettingContractBandwidthV0)
    {
        Uint32.Encode(stream, encodedConfigSettingContractBandwidthV0.LedgerMaxTxsSizeBytes);
        Uint32.Encode(stream, encodedConfigSettingContractBandwidthV0.TxMaxSizeBytes);
        Int64.Encode(stream, encodedConfigSettingContractBandwidthV0.FeeTxSize1KB);
    }

    public static ConfigSettingContractBandwidthV0 Decode(XdrDataInputStream stream)
    {
        var decodedConfigSettingContractBandwidthV0 = new ConfigSettingContractBandwidthV0();
        decodedConfigSettingContractBandwidthV0.LedgerMaxTxsSizeBytes = Uint32.Decode(stream);
        decodedConfigSettingContractBandwidthV0.TxMaxSizeBytes = Uint32.Decode(stream);
        decodedConfigSettingContractBandwidthV0.FeeTxSize1KB = Int64.Decode(stream);
        return decodedConfigSettingContractBandwidthV0;
    }
}