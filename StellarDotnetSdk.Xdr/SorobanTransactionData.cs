// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct SorobanTransactionData
//  {
//      union switch (int v)
//      {
//      case 0:
//          void;
//      case 1:
//          SorobanResourcesExtV0 resourceExt;
//      } ext;
//      SorobanResources resources;
//      // Amount of the transaction `fee` allocated to the Soroban resource fees.
//      // The fraction of `resourceFee` corresponding to `resources` specified 
//      // above is *not* refundable (i.e. fees for instructions, ledger I/O), as
//      // well as fees for the transaction size.
//      // The remaining part of the fee is refundable and the charged value is
//      // based on the actual consumption of refundable resources (events, ledger
//      // rent bumps).
//      // The `inclusionFee` used for prioritization of the transaction is defined
//      // as `tx.fee - resourceFee`.
//      int64 resourceFee;
//  };

//  ===========================================================================
public class SorobanTransactionData
{
    public SorobanTransactionDataExt Ext { get; set; }
    public SorobanResources Resources { get; set; }
    public Int64 ResourceFee { get; set; }

    public static void Encode(XdrDataOutputStream stream, SorobanTransactionData encodedSorobanTransactionData)
    {
        SorobanTransactionDataExt.Encode(stream, encodedSorobanTransactionData.Ext);
        SorobanResources.Encode(stream, encodedSorobanTransactionData.Resources);
        Int64.Encode(stream, encodedSorobanTransactionData.ResourceFee);
    }

    public static SorobanTransactionData Decode(XdrDataInputStream stream)
    {
        var decodedSorobanTransactionData = new SorobanTransactionData();
        decodedSorobanTransactionData.Ext = SorobanTransactionDataExt.Decode(stream);
        decodedSorobanTransactionData.Resources = SorobanResources.Decode(stream);
        decodedSorobanTransactionData.ResourceFee = Int64.Decode(stream);
        return decodedSorobanTransactionData;
    }

    public class SorobanTransactionDataExt
    {
        public int Discriminant { get; set; }

        public SorobanResourcesExtV0 ResourceExt { get; set; }

        public static void Encode(XdrDataOutputStream stream,
            SorobanTransactionDataExt encodedSorobanTransactionDataExt)
        {
            stream.WriteInt(encodedSorobanTransactionDataExt.Discriminant);
            switch (encodedSorobanTransactionDataExt.Discriminant)
            {
                case 0:
                    break;
                case 1:
                    SorobanResourcesExtV0.Encode(stream, encodedSorobanTransactionDataExt.ResourceExt);
                    break;
            }
        }

        public static SorobanTransactionDataExt Decode(XdrDataInputStream stream)
        {
            var decodedSorobanTransactionDataExt = new SorobanTransactionDataExt();
            var discriminant = stream.ReadInt();
            decodedSorobanTransactionDataExt.Discriminant = discriminant;
            switch (decodedSorobanTransactionDataExt.Discriminant)
            {
                case 0:
                    break;
                case 1:
                    decodedSorobanTransactionDataExt.ResourceExt = SorobanResourcesExtV0.Decode(stream);
                    break;
            }
            return decodedSorobanTransactionDataExt;
        }
    }
}