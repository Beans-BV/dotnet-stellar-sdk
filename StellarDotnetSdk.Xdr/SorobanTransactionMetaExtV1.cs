// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct SorobanTransactionMetaExtV1
//  {
//      ExtensionPoint ext;
//  
//      // The following are the components of the overall Soroban resource fee
//      // charged for the transaction.
//      // The following relation holds:
//      // `resourceFeeCharged = totalNonRefundableResourceFeeCharged + totalRefundableResourceFeeCharged`
//      // where `resourceFeeCharged` is the overall fee charged for the 
//      // transaction. Also, `resourceFeeCharged` <= `sorobanData.resourceFee` 
//      // i.e.we never charge more than the declared resource fee.
//      // The inclusion fee for charged the Soroban transaction can be found using 
//      // the following equation:
//      // `result.feeCharged = resourceFeeCharged + inclusionFeeCharged`.
//  
//      // Total amount (in stroops) that has been charged for non-refundable
//      // Soroban resources.
//      // Non-refundable resources are charged based on the usage declared in
//      // the transaction envelope (such as `instructions`, `readBytes` etc.) and 
//      // is charged regardless of the success of the transaction.
//      int64 totalNonRefundableResourceFeeCharged;
//      // Total amount (in stroops) that has been charged for refundable
//      // Soroban resource fees.
//      // Currently this comprises the rent fee (`rentFeeCharged`) and the
//      // fee for the events and return value.
//      // Refundable resources are charged based on the actual resources usage.
//      // Since currently refundable resources are only used for the successful
//      // transactions, this will be `0` for failed transactions.
//      int64 totalRefundableResourceFeeCharged;
//      // Amount (in stroops) that has been charged for rent.
//      // This is a part of `totalNonRefundableResourceFeeCharged`.
//      int64 rentFeeCharged;
//  };

//  ===========================================================================
public class SorobanTransactionMetaExtV1
{
    public ExtensionPoint Ext { get; set; }
    public Int64 TotalNonRefundableResourceFeeCharged { get; set; }
    public Int64 TotalRefundableResourceFeeCharged { get; set; }
    public Int64 RentFeeCharged { get; set; }

    public static void Encode(XdrDataOutputStream stream,
        SorobanTransactionMetaExtV1 encodedSorobanTransactionMetaExtV1)
    {
        ExtensionPoint.Encode(stream, encodedSorobanTransactionMetaExtV1.Ext);
        Int64.Encode(stream, encodedSorobanTransactionMetaExtV1.TotalNonRefundableResourceFeeCharged);
        Int64.Encode(stream, encodedSorobanTransactionMetaExtV1.TotalRefundableResourceFeeCharged);
        Int64.Encode(stream, encodedSorobanTransactionMetaExtV1.RentFeeCharged);
    }

    public static SorobanTransactionMetaExtV1 Decode(XdrDataInputStream stream)
    {
        var decodedSorobanTransactionMetaExtV1 = new SorobanTransactionMetaExtV1();
        decodedSorobanTransactionMetaExtV1.Ext = ExtensionPoint.Decode(stream);
        decodedSorobanTransactionMetaExtV1.TotalNonRefundableResourceFeeCharged = Int64.Decode(stream);
        decodedSorobanTransactionMetaExtV1.TotalRefundableResourceFeeCharged = Int64.Decode(stream);
        decodedSorobanTransactionMetaExtV1.RentFeeCharged = Int64.Decode(stream);
        return decodedSorobanTransactionMetaExtV1;
    }
}