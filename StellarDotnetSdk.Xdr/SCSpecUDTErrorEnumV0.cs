// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct SCSpecUDTErrorEnumV0
//  {
//      string doc<SC_SPEC_DOC_LIMIT>;
//      string lib<80>;
//      string name<60>;
//      SCSpecUDTErrorEnumCaseV0 cases<50>;
//  };

//  ===========================================================================
public class SCSpecUDTErrorEnumV0
{
    public string Doc { get; set; }
    public string Lib { get; set; }
    public string Name { get; set; }
    public SCSpecUDTErrorEnumCaseV0[] Cases { get; set; }

    public static void Encode(XdrDataOutputStream stream, SCSpecUDTErrorEnumV0 encodedSCSpecUDTErrorEnumV0)
    {
        stream.WriteString(encodedSCSpecUDTErrorEnumV0.Doc);
        stream.WriteString(encodedSCSpecUDTErrorEnumV0.Lib);
        stream.WriteString(encodedSCSpecUDTErrorEnumV0.Name);
        var casessize = encodedSCSpecUDTErrorEnumV0.Cases.Length;
        stream.WriteInt(casessize);
        for (var i = 0; i < casessize; i++)
        {
            SCSpecUDTErrorEnumCaseV0.Encode(stream, encodedSCSpecUDTErrorEnumV0.Cases[i]);
        }
    }

    public static SCSpecUDTErrorEnumV0 Decode(XdrDataInputStream stream)
    {
        var decodedSCSpecUDTErrorEnumV0 = new SCSpecUDTErrorEnumV0();
        decodedSCSpecUDTErrorEnumV0.Doc = stream.ReadString();
        decodedSCSpecUDTErrorEnumV0.Lib = stream.ReadString();
        decodedSCSpecUDTErrorEnumV0.Name = stream.ReadString();
        var casessize = stream.ReadInt();
        decodedSCSpecUDTErrorEnumV0.Cases = new SCSpecUDTErrorEnumCaseV0[casessize];
        for (var i = 0; i < casessize; i++)
        {
            decodedSCSpecUDTErrorEnumV0.Cases[i] = SCSpecUDTErrorEnumCaseV0.Decode(stream);
        }
        return decodedSCSpecUDTErrorEnumV0;
    }
}