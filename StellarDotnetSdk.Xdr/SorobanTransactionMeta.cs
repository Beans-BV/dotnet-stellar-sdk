// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct SorobanTransactionMeta 
//  {
//      SorobanTransactionMetaExt ext;
//  
//      ContractEvent events<>;             // custom events populated by the
//                                          // contracts themselves.
//      SCVal returnValue;                  // return value of the host fn invocation
//  
//      // Diagnostics events that are not hashed.
//      // This will contain all contract and diagnostic events. Even ones
//      // that were emitted in a failed contract call.
//      DiagnosticEvent diagnosticEvents<>;
//  };

//  ===========================================================================
public class SorobanTransactionMeta
{
    public SorobanTransactionMetaExt Ext { get; set; }
    public ContractEvent[] Events { get; set; }
    public SCVal ReturnValue { get; set; }
    public DiagnosticEvent[] DiagnosticEvents { get; set; }

    public static void Encode(XdrDataOutputStream stream, SorobanTransactionMeta encodedSorobanTransactionMeta)
    {
        SorobanTransactionMetaExt.Encode(stream, encodedSorobanTransactionMeta.Ext);
        var eventssize = encodedSorobanTransactionMeta.Events.Length;
        stream.WriteInt(eventssize);
        for (var i = 0; i < eventssize; i++) ContractEvent.Encode(stream, encodedSorobanTransactionMeta.Events[i]);
        SCVal.Encode(stream, encodedSorobanTransactionMeta.ReturnValue);
        var diagnosticEventssize = encodedSorobanTransactionMeta.DiagnosticEvents.Length;
        stream.WriteInt(diagnosticEventssize);
        for (var i = 0; i < diagnosticEventssize; i++)
            DiagnosticEvent.Encode(stream, encodedSorobanTransactionMeta.DiagnosticEvents[i]);
    }

    public static SorobanTransactionMeta Decode(XdrDataInputStream stream)
    {
        var decodedSorobanTransactionMeta = new SorobanTransactionMeta();
        decodedSorobanTransactionMeta.Ext = SorobanTransactionMetaExt.Decode(stream);
        var eventssize = stream.ReadInt();
        decodedSorobanTransactionMeta.Events = new ContractEvent[eventssize];
        for (var i = 0; i < eventssize; i++) decodedSorobanTransactionMeta.Events[i] = ContractEvent.Decode(stream);
        decodedSorobanTransactionMeta.ReturnValue = SCVal.Decode(stream);
        var diagnosticEventssize = stream.ReadInt();
        decodedSorobanTransactionMeta.DiagnosticEvents = new DiagnosticEvent[diagnosticEventssize];
        for (var i = 0; i < diagnosticEventssize; i++)
            decodedSorobanTransactionMeta.DiagnosticEvents[i] = DiagnosticEvent.Decode(stream);
        return decodedSorobanTransactionMeta;
    }
}