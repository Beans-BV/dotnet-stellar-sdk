// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct LedgerFootprint
//  {
//      LedgerKey readOnly<>;
//      LedgerKey readWrite<>;
//  };

//  ===========================================================================
public class LedgerFootprint
{
    public LedgerKey[] ReadOnly { get; set; }
    public LedgerKey[] ReadWrite { get; set; }

    public static void Encode(XdrDataOutputStream stream, LedgerFootprint encodedLedgerFootprint)
    {
        var readOnlysize = encodedLedgerFootprint.ReadOnly.Length;
        stream.WriteInt(readOnlysize);
        for (var i = 0; i < readOnlysize; i++)
        {
            LedgerKey.Encode(stream, encodedLedgerFootprint.ReadOnly[i]);
        }
        var readWritesize = encodedLedgerFootprint.ReadWrite.Length;
        stream.WriteInt(readWritesize);
        for (var i = 0; i < readWritesize; i++)
        {
            LedgerKey.Encode(stream, encodedLedgerFootprint.ReadWrite[i]);
        }
    }

    public static LedgerFootprint Decode(XdrDataInputStream stream)
    {
        var decodedLedgerFootprint = new LedgerFootprint();
        var readOnlysize = stream.ReadInt();
        decodedLedgerFootprint.ReadOnly = new LedgerKey[readOnlysize];
        for (var i = 0; i < readOnlysize; i++)
        {
            decodedLedgerFootprint.ReadOnly[i] = LedgerKey.Decode(stream);
        }
        var readWritesize = stream.ReadInt();
        decodedLedgerFootprint.ReadWrite = new LedgerKey[readWritesize];
        for (var i = 0; i < readWritesize; i++)
        {
            decodedLedgerFootprint.ReadWrite[i] = LedgerKey.Decode(stream);
        }
        return decodedLedgerFootprint;
    }
}