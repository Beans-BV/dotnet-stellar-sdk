// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  union SorobanAuthorizedFunction switch (SorobanAuthorizedFunctionType type)
//  {
//  case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN:
//      InvokeContractArgs contractFn;
//  // This variant of auth payload for creating new contract instances
//  // doesn't allow specifying the constructor arguments, creating contracts
//  // with constructors that take arguments is only possible by authorizing
//  // `SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_V2_HOST_FN` 
//  // (protocol 22+).
//  case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN:
//      CreateContractArgs createContractHostFn;
//  // This variant of auth payload for creating new contract instances
//  // is only accepted in and after protocol 22. It allows authorizing the
//  // contract constructor arguments.
//  case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_V2_HOST_FN:
//      CreateContractArgsV2 createContractV2HostFn;
//  };

//  ===========================================================================
public class SorobanAuthorizedFunction
{
    public SorobanAuthorizedFunctionType Discriminant { get; set; } = new();

    public InvokeContractArgs ContractFn { get; set; }
    public CreateContractArgs CreateContractHostFn { get; set; }
    public CreateContractArgsV2 CreateContractV2HostFn { get; set; }

    public static void Encode(XdrDataOutputStream stream, SorobanAuthorizedFunction encodedSorobanAuthorizedFunction)
    {
        stream.WriteInt((int)encodedSorobanAuthorizedFunction.Discriminant.InnerValue);
        switch (encodedSorobanAuthorizedFunction.Discriminant.InnerValue)
        {
            case SorobanAuthorizedFunctionType.SorobanAuthorizedFunctionTypeEnum
                .SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN:
                InvokeContractArgs.Encode(stream, encodedSorobanAuthorizedFunction.ContractFn);
                break;
            case SorobanAuthorizedFunctionType.SorobanAuthorizedFunctionTypeEnum
                .SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN:
                CreateContractArgs.Encode(stream, encodedSorobanAuthorizedFunction.CreateContractHostFn);
                break;
            case SorobanAuthorizedFunctionType.SorobanAuthorizedFunctionTypeEnum
                .SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_V2_HOST_FN:
                CreateContractArgsV2.Encode(stream, encodedSorobanAuthorizedFunction.CreateContractV2HostFn);
                break;
        }
    }

    public static SorobanAuthorizedFunction Decode(XdrDataInputStream stream)
    {
        var decodedSorobanAuthorizedFunction = new SorobanAuthorizedFunction();
        var discriminant = SorobanAuthorizedFunctionType.Decode(stream);
        decodedSorobanAuthorizedFunction.Discriminant = discriminant;
        switch (decodedSorobanAuthorizedFunction.Discriminant.InnerValue)
        {
            case SorobanAuthorizedFunctionType.SorobanAuthorizedFunctionTypeEnum
                .SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN:
                decodedSorobanAuthorizedFunction.ContractFn = InvokeContractArgs.Decode(stream);
                break;
            case SorobanAuthorizedFunctionType.SorobanAuthorizedFunctionTypeEnum
                .SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN:
                decodedSorobanAuthorizedFunction.CreateContractHostFn = CreateContractArgs.Decode(stream);
                break;
            case SorobanAuthorizedFunctionType.SorobanAuthorizedFunctionTypeEnum
                .SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_V2_HOST_FN:
                decodedSorobanAuthorizedFunction.CreateContractV2HostFn = CreateContractArgsV2.Decode(stream);
                break;
        }
        return decodedSorobanAuthorizedFunction;
    }
}