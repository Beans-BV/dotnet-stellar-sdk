// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  union HotArchiveBucketEntry switch (HotArchiveBucketEntryType type)
//  {
//  case HOT_ARCHIVE_ARCHIVED:
//      LedgerEntry archivedEntry;
//  
//  case HOT_ARCHIVE_LIVE:
//  case HOT_ARCHIVE_DELETED:
//      LedgerKey key;
//  case HOT_ARCHIVE_METAENTRY:
//      BucketMetadata metaEntry;
//  };

//  ===========================================================================
public class HotArchiveBucketEntry
{
    public HotArchiveBucketEntryType Discriminant { get; set; } = new();

    public LedgerEntry ArchivedEntry { get; set; }
    public LedgerKey Key { get; set; }
    public BucketMetadata MetaEntry { get; set; }

    public static void Encode(XdrDataOutputStream stream, HotArchiveBucketEntry encodedHotArchiveBucketEntry)
    {
        stream.WriteInt((int)encodedHotArchiveBucketEntry.Discriminant.InnerValue);
        switch (encodedHotArchiveBucketEntry.Discriminant.InnerValue)
        {
            case HotArchiveBucketEntryType.HotArchiveBucketEntryTypeEnum.HOT_ARCHIVE_ARCHIVED:
                LedgerEntry.Encode(stream, encodedHotArchiveBucketEntry.ArchivedEntry);
                break;
            case HotArchiveBucketEntryType.HotArchiveBucketEntryTypeEnum.HOT_ARCHIVE_LIVE:
            case HotArchiveBucketEntryType.HotArchiveBucketEntryTypeEnum.HOT_ARCHIVE_DELETED:
                LedgerKey.Encode(stream, encodedHotArchiveBucketEntry.Key);
                break;
            case HotArchiveBucketEntryType.HotArchiveBucketEntryTypeEnum.HOT_ARCHIVE_METAENTRY:
                BucketMetadata.Encode(stream, encodedHotArchiveBucketEntry.MetaEntry);
                break;
        }
    }

    public static HotArchiveBucketEntry Decode(XdrDataInputStream stream)
    {
        var decodedHotArchiveBucketEntry = new HotArchiveBucketEntry();
        var discriminant = HotArchiveBucketEntryType.Decode(stream);
        decodedHotArchiveBucketEntry.Discriminant = discriminant;
        switch (decodedHotArchiveBucketEntry.Discriminant.InnerValue)
        {
            case HotArchiveBucketEntryType.HotArchiveBucketEntryTypeEnum.HOT_ARCHIVE_ARCHIVED:
                decodedHotArchiveBucketEntry.ArchivedEntry = LedgerEntry.Decode(stream);
                break;
            case HotArchiveBucketEntryType.HotArchiveBucketEntryTypeEnum.HOT_ARCHIVE_LIVE:
            case HotArchiveBucketEntryType.HotArchiveBucketEntryTypeEnum.HOT_ARCHIVE_DELETED:
                decodedHotArchiveBucketEntry.Key = LedgerKey.Decode(stream);
                break;
            case HotArchiveBucketEntryType.HotArchiveBucketEntryTypeEnum.HOT_ARCHIVE_METAENTRY:
                decodedHotArchiveBucketEntry.MetaEntry = BucketMetadata.Decode(stream);
                break;
        }
        return decodedHotArchiveBucketEntry;
    }
}