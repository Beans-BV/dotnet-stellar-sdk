// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct TransactionV1Envelope
//  {
//      Transaction tx;
//      /* Each decorated signature is a signature over the SHA256 hash of
//       * a TransactionSignaturePayload */
//      DecoratedSignature signatures<20>;
//  };

//  ===========================================================================
public class TransactionV1Envelope
{
    public Transaction Tx { get; set; }
    public DecoratedSignature[] Signatures { get; set; }

    public static void Encode(XdrDataOutputStream stream, TransactionV1Envelope encodedTransactionV1Envelope)
    {
        Transaction.Encode(stream, encodedTransactionV1Envelope.Tx);
        var signaturessize = encodedTransactionV1Envelope.Signatures.Length;
        stream.WriteInt(signaturessize);
        for (var i = 0; i < signaturessize; i++)
        {
            DecoratedSignature.Encode(stream, encodedTransactionV1Envelope.Signatures[i]);
        }
    }

    public static TransactionV1Envelope Decode(XdrDataInputStream stream)
    {
        var decodedTransactionV1Envelope = new TransactionV1Envelope();
        decodedTransactionV1Envelope.Tx = Transaction.Decode(stream);
        var signaturessize = stream.ReadInt();
        decodedTransactionV1Envelope.Signatures = new DecoratedSignature[signaturessize];
        for (var i = 0; i < signaturessize; i++)
        {
            decodedTransactionV1Envelope.Signatures[i] = DecoratedSignature.Decode(stream);
        }
        return decodedTransactionV1Envelope;
    }
}