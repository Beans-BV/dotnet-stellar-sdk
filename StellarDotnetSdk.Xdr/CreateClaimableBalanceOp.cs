// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  struct CreateClaimableBalanceOp
//  {
//      Asset asset;
//      int64 amount;
//      Claimant claimants<10>;
//  };

//  ===========================================================================
public class CreateClaimableBalanceOp
{
    public Asset Asset { get; set; }
    public Int64 Amount { get; set; }
    public Claimant[] Claimants { get; set; }

    public static void Encode(XdrDataOutputStream stream, CreateClaimableBalanceOp encodedCreateClaimableBalanceOp)
    {
        Asset.Encode(stream, encodedCreateClaimableBalanceOp.Asset);
        Int64.Encode(stream, encodedCreateClaimableBalanceOp.Amount);
        var claimantssize = encodedCreateClaimableBalanceOp.Claimants.Length;
        stream.WriteInt(claimantssize);
        for (var i = 0; i < claimantssize; i++) Claimant.Encode(stream, encodedCreateClaimableBalanceOp.Claimants[i]);
    }

    public static CreateClaimableBalanceOp Decode(XdrDataInputStream stream)
    {
        var decodedCreateClaimableBalanceOp = new CreateClaimableBalanceOp();
        decodedCreateClaimableBalanceOp.Asset = Asset.Decode(stream);
        decodedCreateClaimableBalanceOp.Amount = Int64.Decode(stream);
        var claimantssize = stream.ReadInt();
        decodedCreateClaimableBalanceOp.Claimants = new Claimant[claimantssize];
        for (var i = 0; i < claimantssize; i++) decodedCreateClaimableBalanceOp.Claimants[i] = Claimant.Decode(stream);
        return decodedCreateClaimableBalanceOp;
    }
}