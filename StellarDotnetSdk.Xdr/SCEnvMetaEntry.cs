// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  union SCEnvMetaEntry switch (SCEnvMetaKind kind)
//  {
//  case SC_ENV_META_KIND_INTERFACE_VERSION:
//      struct {
//          uint32 protocol;
//          uint32 preRelease;
//      } interfaceVersion;
//  };

//  ===========================================================================
public class SCEnvMetaEntry
{
    public SCEnvMetaKind Discriminant { get; set; } = new();

    public SCEnvMetaEntryInterfaceVersion InterfaceVersion { get; set; }

    public static void Encode(XdrDataOutputStream stream, SCEnvMetaEntry encodedSCEnvMetaEntry)
    {
        stream.WriteInt((int)encodedSCEnvMetaEntry.Discriminant.InnerValue);
        switch (encodedSCEnvMetaEntry.Discriminant.InnerValue)
        {
            case SCEnvMetaKind.SCEnvMetaKindEnum.SC_ENV_META_KIND_INTERFACE_VERSION:
                SCEnvMetaEntryInterfaceVersion.Encode(stream, encodedSCEnvMetaEntry.InterfaceVersion);
                break;
        }
    }

    public static SCEnvMetaEntry Decode(XdrDataInputStream stream)
    {
        var decodedSCEnvMetaEntry = new SCEnvMetaEntry();
        var discriminant = SCEnvMetaKind.Decode(stream);
        decodedSCEnvMetaEntry.Discriminant = discriminant;
        switch (decodedSCEnvMetaEntry.Discriminant.InnerValue)
        {
            case SCEnvMetaKind.SCEnvMetaKindEnum.SC_ENV_META_KIND_INTERFACE_VERSION:
                decodedSCEnvMetaEntry.InterfaceVersion = SCEnvMetaEntryInterfaceVersion.Decode(stream);
                break;
        }
        return decodedSCEnvMetaEntry;
    }

    public class SCEnvMetaEntryInterfaceVersion
    {
        public Uint32 Protocol { get; set; }
        public Uint32 PreRelease { get; set; }

        public static void Encode(XdrDataOutputStream stream,
            SCEnvMetaEntryInterfaceVersion encodedSCEnvMetaEntryInterfaceVersion)
        {
            Uint32.Encode(stream, encodedSCEnvMetaEntryInterfaceVersion.Protocol);
            Uint32.Encode(stream, encodedSCEnvMetaEntryInterfaceVersion.PreRelease);
        }

        public static SCEnvMetaEntryInterfaceVersion Decode(XdrDataInputStream stream)
        {
            var decodedSCEnvMetaEntryInterfaceVersion = new SCEnvMetaEntryInterfaceVersion();
            decodedSCEnvMetaEntryInterfaceVersion.Protocol = Uint32.Decode(stream);
            decodedSCEnvMetaEntryInterfaceVersion.PreRelease = Uint32.Decode(stream);
            return decodedSCEnvMetaEntryInterfaceVersion;
        }
    }
}