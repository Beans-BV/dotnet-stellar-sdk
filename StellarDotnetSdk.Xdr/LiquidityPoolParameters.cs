// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

namespace StellarDotnetSdk.Xdr;

// === xdr source ============================================================

//  union LiquidityPoolParameters switch (LiquidityPoolType type)
//  {
//  case LIQUIDITY_POOL_CONSTANT_PRODUCT:
//      LiquidityPoolConstantProductParameters constantProduct;
//  };

//  ===========================================================================
public class LiquidityPoolParameters
{
    public LiquidityPoolType Discriminant { get; set; } = new();

    public LiquidityPoolConstantProductParameters ConstantProduct { get; set; }

    public static void Encode(XdrDataOutputStream stream, LiquidityPoolParameters encodedLiquidityPoolParameters)
    {
        stream.WriteInt((int)encodedLiquidityPoolParameters.Discriminant.InnerValue);
        switch (encodedLiquidityPoolParameters.Discriminant.InnerValue)
        {
            case LiquidityPoolType.LiquidityPoolTypeEnum.LIQUIDITY_POOL_CONSTANT_PRODUCT:
                LiquidityPoolConstantProductParameters.Encode(stream, encodedLiquidityPoolParameters.ConstantProduct);
                break;
        }
    }

    public static LiquidityPoolParameters Decode(XdrDataInputStream stream)
    {
        var decodedLiquidityPoolParameters = new LiquidityPoolParameters();
        var discriminant = LiquidityPoolType.Decode(stream);
        decodedLiquidityPoolParameters.Discriminant = discriminant;
        switch (decodedLiquidityPoolParameters.Discriminant.InnerValue)
        {
            case LiquidityPoolType.LiquidityPoolTypeEnum.LIQUIDITY_POOL_CONSTANT_PRODUCT:
                decodedLiquidityPoolParameters.ConstantProduct = LiquidityPoolConstantProductParameters.Decode(stream);
                break;
        }

        return decodedLiquidityPoolParameters;
    }
}