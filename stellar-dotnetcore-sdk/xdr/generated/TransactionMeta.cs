// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnetcore_sdk.xdr {

// === xdr source ============================================================

//  union TransactionMeta switch (int v)
//  {
//  case 0:
//      OperationMeta operations<>;
//  };

//  ===========================================================================
public class TransactionMeta  {
  public TransactionMeta () {}

  public int Discriminant { get; set; } = new int();

  public OperationMeta[] Operations {get; set;}
  public static void Encode(IByteWriter stream, TransactionMeta encodedTransactionMeta) {
  XdrEncoding.EncodeInt32((int)encodedTransactionMeta.Discriminant, stream);
  switch (encodedTransactionMeta.Discriminant) {
  case 0:
  int operationssize = encodedTransactionMeta.Operations.Length;
  XdrEncoding.EncodeInt32(operationssize, stream);
  for (int i = 0; i < operationssize; i++) {
    OperationMeta.Encode(stream, encodedTransactionMeta.Operations[i]);
  }
  break;
  }
  }
  public static TransactionMeta Decode(IByteReader stream) {
  TransactionMeta decodedTransactionMeta = new TransactionMeta();
  int discriminant =  XdrEncoding.DecodeInt32(stream);
  decodedTransactionMeta.Discriminant = discriminant;
  switch (decodedTransactionMeta.Discriminant) {
  case 0:
  int operationssize = XdrEncoding.DecodeInt32(stream);
  decodedTransactionMeta.Operations = new OperationMeta[operationssize];
  for (int i = 0; i < operationssize; i++) {
    decodedTransactionMeta.Operations[i] = OperationMeta.Decode(stream);
  }
  break;
  }
    return decodedTransactionMeta;
  }
}
}
